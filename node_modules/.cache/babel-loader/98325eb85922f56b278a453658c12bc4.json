{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-fueled-by-hops/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(\"\"));\n  const [go, setGo] = useState(\"circle\");\n  const [winningMessage, setWinningMessage] = useState(null);\n  const message = \"It is now \" + go + \"'s go.\";\n  console.log(squares);\n\n  const checkScore = () => {\n    const winningCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    winningCombos.forEach(array => {\n      let circleWin = array.every(square => squares[square] === \"circle\");\n\n      if (circleWin) {\n        setWinningMessage(\"Circle Wins!\");\n        return;\n      }\n    });\n    winningCombos.forEach(array => {\n      let crossWin = array.every(square => squares[square] === \"cross\");\n\n      if (crossWin) {\n        setWinningMessage(\"Cross Wins!\");\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    checkScore();\n  }, [squares]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grid\",\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(Square, {\n        id: index,\n        squares: squares,\n        setSquares: setSquares,\n        go: go,\n        setGo: setGo,\n        square: square,\n        winningMessage: winningMessage\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: winningMessage || message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        children: squares.map((squares, index) => /*#__PURE__*/_jsxDEV(Square, {\n          id: index,\n          squares: squares\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 57\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"DYW+OEYyZrQq3kpXJNLDAzgwNuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Square","App","squares","setSquares","Array","fill","go","setGo","winningMessage","setWinningMessage","message","console","log","checkScore","winningCombos","forEach","array","circleWin","every","square","crossWin","map","index"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe-fueled-by-hops/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(\"\"))\n  const [go, setGo] = useState(\"circle\")\n  const [winningMessage, setWinningMessage] = useState(null)\n  \n  const message = \"It is now \" + go + \"'s go.\"\n  console.log(squares)\n\n  const checkScore = () => {\n    const winningCombos = [\n      [0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]\n    ]\n    winningCombos.forEach(array => {\n      let circleWin = array.every(square => squares[square] === \"circle\")\n       if (circleWin){\n        setWinningMessage(\"Circle Wins!\")\n        return\n       }\n    })\n\n    winningCombos.forEach(array => {\n      let crossWin = array.every(square => squares[square] === \"cross\")\n       if (crossWin){\n        setWinningMessage(\"Cross Wins!\")\n        return\n       }\n    })\n\n  }\n\n  useEffect(() => {\n    checkScore()\n  }, [squares])\n\n      return (\n        <div className=\"app\">\n          <div id=\"grid\">\n            {squares.map((square, index)=>\n            <Square\n                key={index}\n                id={index}\n                squares={squares}\n                setSquares={setSquares}\n                go={go}\n                setGo={setGo}\n                square={square}\n                winningMessage={winningMessage}\n              />)}\n          </div>\n          <p>{winningMessage || message}</p>\n        </div>\n\n      )\n\n\n\n  return (\n    <>\n\n      <h1>Tic Tac Toe</h1>\n      <div className=\"square\">\n       <div id=\"grid\" >{squares.map((squares, index) => <Square \n                                             key={index} \n                                             id={index} \n                                             squares={squares}\n                                            /> )}\n                                             </div>\n        </div>\n      \n      \n    </>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}